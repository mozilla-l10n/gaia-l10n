# Day names

weekday-0-long = Doming
weekday-1-long = Luns
weekday-2-long = Mars
weekday-3-long = Mierc
weekday-4-long = Juevs
weekday-5-long = Viern
weekday-6-long = Sab

weekday-0-short = Dom
weekday-1-short = Lun
weekday-2-short = Mar
weekday-3-short = Mie
weekday-4-short = Jue
weekday-5-short = Vie
weekday-6-short = Sab

# Month names

month-0-long  = Beé ener
month-1-long  = Beé febrer
month-2-long  = Beé marsh
month-3-long  = beé Abril
month-4-long  = beé May
month-5-long  = beé Jun
month-6-long  = Jul
month-7-long  = Agost
month-8-long  = Septiembr
month-9-long  = Octubr
month-10-long = Noviembr
month-11-long = Diciembr

month-0-genitive  = Ener
month-1-genitive  = Febrer
month-2-genitive  = Mars
month-3-genitive  = Abril
month-4-genitive  = May
month-5-genitive  = beé Jun
month-6-genitive  = beé Jul
month-7-genitive  = beé Agost
month-8-genitive  = beé Septiembr
month-9-genitive  = beé Octubr
month-10-genitive = beé Noviembr
month-11-genitive = beé Diciembr

month-0-short  = Ene
month-1-short  = Feb
month-2-short  = Mar
month-3-short  = Abr
month-4-short  = May
month-5-short  = Jun
month-6-short  = Jul
month-7-short  = Ago
month-8-short  = Sep
month-9-short  = Oct
month-10-short = Nov
month-11-short = Dec

# Relative time ("pretty dates"), normal/long variant

minutes-ago-long={[ plural(value) ]}
minutes-ago-long[zero]  = nal
minutes-ago-long[one]   = diif minut sera
minutes-ago-long[two]   = {{value}} minut sera
minutes-ago-long[few]   = {{value}} minut sera
minutes-ago-long[many]  = {{value}} minut sera
minutes-ago-long[other] = {{value}} minut sera

hours-ago-long={[ plural(value) ]}
hours-ago-long[zero]  = nal
hours-ago-long[one]   = diif hor ah
hours-ago-long[two]   = {{value}} diif hora ha
hours-ago-long[few]   = {{value}} diif hora ha
hours-ago-long[many]  = {{value}} diif hora ha
hours-ago-long[other] = {{value}} diif hora ha

days-ago-long={[ plural(value) ]}
days-ago-long[zero]  = güis ree
days-ago-long[one]   = naa ah
days-ago-long[two]   = {{value}} güis bri taa
days-ago-long[few]   = {{value}} güis bri taa
days-ago-long[many]  = {{value}} güis bri taa
days-ago-long[other] = {{value}} güis bri taa

weeks-ago-long={[ plural(value) ]}
weeks-ago-long[zero]  = nal sman ree
weeks-ago-long[one]   = sman brit ta
weeks-ago-long[two]   = {{value}} sman brit ta
weeks-ago-long[few]   = {{value}} sman brit ta
weeks-ago-long[many]  = {{value}} sman brit ta
weeks-ago-long[other] = {{value}} sman brit ta

months-ago-long={[ plural(value) ]}
months-ago-long[zero]  = beé ree
months-ago-long[one]   = beé brit ah
months-ago-long[two]   = {{value}} beé sera
months-ago-long[few]   = {{value}} beé sera
months-ago-long[many]  = {{value}} beé sera
months-ago-long[other] = {{value}} beé sera

years-ago-long={[ plural(value) ]}
years-ago-long[zero]  = tit re
years-ago-long[one]   = lit brita
years-ago-long[two]   = {{value}} lit sera
years-ago-long[few]   = {{value}} lit sera
years-ago-long[many]  = {{value}} lit brita
years-ago-long[other] = {{value}} lit brita

minutes-until-long={[ plural(value) ]}
minutes-until-long[zero]  = nal
minutes-until-long[one]   = diif minut
minutes-until-long[two]   = let {{value}} minut
minutes-until-long[few]   = let {{value}} minut
minutes-until-long[many]  = let {{value}} minut
minutes-until-long[other] = let {{value}} minut

hours-until-long={[ plural(value) ]}
hours-until-long[zero]  = nal
hours-until-long[one]   = let diif hor
hours-until-long[two]   = let {{value}} hor
hours-until-long[few]   = let {{value}} hor
hours-until-long[many]  = let {{value}} hor
hours-until-long[other] = let {{value}} hor

days-until-long={[ plural(value) ]}
days-until-long[zero]  = nal
days-until-long[one]   = ge til
days-until-long[two]   = let {{value}} güis
days-until-long[few]   = let {{value}} güis
days-until-long[many]  = let {{value}} güis
days-until-long[other] = let {{value}} güis

weeks-until-long={[ plural(value) ]}
weeks-until-long[zero]  = naal sman
weeks-until-long[one]   = sman died
weeks-until-long[two]   = let {{value}} sman
weeks-until-long[few]   = let {{value}} sman
weeks-until-long[many]  = let {{value}} sman
weeks-until-long[other] = let {{value}} sman

months-until-long={[ plural(value) ]}
months-until-long[zero]  = beé ree
months-until-long[one]   = beé died
months-until-long[two]   = let {{value}} beé
months-until-long[few]   = let {{value}} beé
months-until-long[many]  = let {{value}} beé
months-until-long[other] = let {{value}} beé

years-until-long={[ plural(value) ]}
years-until-long[zero]  = lit ree
years-until-long[one]   = lit died
years-until-long[two]   = let {{value}} lit re
years-until-long[few]   = let {{value}} lit re
years-until-long[many]  = let {{value}} lit re
years-until-long[other] = let {{value}} lit re


# Relative time ("pretty dates"), short variant
# LOCALIZATION NOTE: the time unit should be as short as possible,
# and the whole string should not exceed a length of ~10 latin characters.
# LOCALIZATION NOTE: the prime (’) can be used to represent minutes for most
# locales, but we use “m” instead for the English locale to prevent a possible
# confusion (35’ ago ≠ 35 feet ago).

minutes-ago-short={[ plural(value) ]}
minutes-ago-short[zero]  = nal
minutes-ago-short[other] = {{value}} beé sera

hours-ago-short={[ plural(value) ]}
hours-ago-short[zero]  = nal
hours-ago-short[other] = {{value}}h sera

days-ago-short={[ plural(value) ]}
days-ago-short[zero]  = nal
days-ago-short[other] = {{value}}d sera

minutes-until-short={[ plural(value) ]}
minutes-until-short[zero]  = nal
minutes-until-short[other] = let {{value}}m

hours-until-short={[ plural(value) ]}
hours-until-short[zero]  = nal
hours-until-short[other] = let {{value}}h

days-until-short={[ plural(value) ]}
days-until-short[zero]  = nal
days-until-short[other] = let {{value}}d

# Relative time ("pretty dates"), unexpected error

incorrectDate = (na kap tal güis)

# Date/Time format
# see http://pubs.opengroup.org/onlinepubs/007908799/xsh/strftime.html

dateTimeFormat_%c = %a %b %e %Y %I:%M:%S %p
dateTimeFormat_%x = %m/%d/%Y
dateTimeFormat_%X = %I:%M:%S %p

shortDateTimeFormat = %x %I:%M %p

# Boolean to indicate if weekStarts on Monday (1) or Sunday (0).

# More flexibility for locales to decide whether the week
# starts on Monday (1) or Sunday (0) or Saturday (6)
# Currently used in Calendar only.

# This variable will be used to select time picker order
# H - hour
# M - minute
# p - dayperiod (am/pm)
#
# Even if your locale does not use dayperiod, user may select it manually
# and the daypicker should be displayed in the proper order
#
# If 24h time format is selected, then the %H will display 24h clock and
# p will be ignored.

# This variable will be used to select date picker order
# Y - year
# M - month
# D - day

# Character used in timePicker to separate hours from minutes

# Separator used for list formatting. \u0020 represents a blank space
# Note that the trailing space is meaningful - "X, Y" vs. "X,Y"

# Localize dayperiod (am/pm in en-US) tokens
time_am = AM
time_pm = PM

# Duration Format patterns for:
# hh:mm:ss.SS => Hour:Minute:Second.Millisecond
